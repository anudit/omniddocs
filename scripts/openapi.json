{
  "openapi": "3.0.0",
  "info": {
    "title": "Login Proof API",
    "version": "1.0.0",
    "description": "API for submitting login proof with encoded secret, message, and scope."
  },
  "servers": [
    {
      "url": "https://fc.omnid.io"
    }
  ],
  "paths": {
    "/makeproof/loginProof": {
      "post": {
        "summary": "Submit Login Proof",
        "description": "Submits encoded login proof details to validate user credentials.",
        "operationId": "submitLoginProof",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "secret": {
                    "type": "string",
                    "description": "Encoded secret for login proof",
                    "example": "547925519087152460452796139673145541278503527266273511184260115996140948003"
                  },
                  "message": {
                    "type": "string",
                    "description": "Encoded message for login proof",
                    "example": "416065734043548809674585754815497663209554112884109213756134343039894205867"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Scope identifier for login proof",
                    "example": "187035976211163640032000461805755068405187575174480755232212391996596767257"
                  }
                },
                "required": ["secret", "message", "scope"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login proof successfully submitted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Proof submission successful"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Server encountered an error"
                }
              }
            }
          }
        }
      }
    },
    "/noir/demo": {
      "post": {
        "summary": "Submit Noir Demo",
        "description": "Submits bytecode, inputs, and kind for Noir demo processing.",
        "operationId": "submitNoirDemo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bytecode": {
                    "type": "string",
                    "description": "Base64 encoded bytecode for Noir processing",
                    "example": "H4sIAAAAAAAA/7VUSQ7DIAyEhKa99ic2SzC3fqWo5P8vqBopUCHCLWYkZIQlMx4vUhxQ+7mJM+ZsX9kaWK1NXic0+AYdIjmwLq6EhI7cR5MxiSz5EIOHgNYk3FwwGxyoY8E1oGTkNfHxgqKj7OgpGz3hGpCTt2zqfuLPRXqUEPOAuIq5+UfkrfhrBGJg0yrB27Sq4Vnfe0P4f7xnu3R8BY/9TPn+ZRa4bNd685a/VOVfKi6SnwvW+fYm/9nR5wcPIDK6OgYAAA=="
                  },
                  "inputs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of inputs for Noir processing",
                    "example": ["1", "2"]
                  },
                  "kind": {
                    "type": "string",
                    "description": "Type of request, such as 'honk'",
                    "example": "honk"
                  }
                },
                "required": ["bytecode", "inputs", "kind"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Noir demo successfully processed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Demo processing successful"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Server encountered an error"
                }
              }
            }
          }
        }
      }
    }
  }
}
